

[Region: us-east4]

=========================

Using Detected Dockerfile

=========================


context: 23db-Nbju

[internal] load build definition from Dockerfile

[internal] load build definition from Dockerfile  ✔ 0ms

[internal] load build definition from Dockerfile

[internal] load build definition from Dockerfile  ✔ 9ms

[internal] load metadata for docker.io/library/node:18-alpine

[internal] load metadata for docker.io/library/node:18-alpine  ✔ 94ms

[internal] load .dockerignore

[internal] load .dockerignore

[internal] load .dockerignore  ✔ 0ms

[internal] load .dockerignore

[internal] load .dockerignore  ✔ 8ms

[builder 4/6] RUN echo "Building frontend..." && npx vite build

[builder 3/6] COPY . .

[builder 2/6] COPY --from=deps /app/node_modules ./node_modules

[deps 4/4] RUN npm ci

[deps 3/4] COPY package.json package-lock.json* ./

[builder 6/6] RUN echo "Creating entry point..." && echo 'import("./production.js");' > dist/index.js

[deps 2/4] WORKDIR /app

[deps 1/4] RUN apk add --no-cache libc6-compat

[runner 3/6] RUN adduser --system --uid 1001 recrutas

[runner 2/6] RUN addgroup --system --gid 1001 nodejs

[builder 1/6] WORKDIR /app

[builder 5/6] RUN echo "Building backend..." && npx esbuild server/production.ts --platform=node --packages=external --bundle --format=esm --outdir=dist --external:vite --external:./vite.ts

[runner 4/6] COPY --from=builder /app/dist ./dist

[base 1/1] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e

[internal] load build context

[runner 6/6] COPY --from=builder /app/package.json ./package.json

[runner 5/6] COPY --from=builder /app/node_modules ./node_modules

[internal] load build context  ✔ 0ms

[base 1/1] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e

[base 1/1] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e  ✔ 6ms

[internal] load build context

[internal] load build context  ✔ 46ms

[builder 1/6] WORKDIR /app  ✔ 0ms – CACHED

[deps 1/4] RUN apk add --no-cache libc6-compat  ✔ 0ms – CACHED

[deps 2/4] WORKDIR /app  ✔ 0ms – CACHED

[deps 3/4] COPY package.json package-lock.json* ./  ✔ 0ms – CACHED

[deps 4/4] RUN npm ci  ✔ 0ms – CACHED

[builder 2/6] COPY --from=deps /app/node_modules ./node_modules  ✔ 0ms – CACHED

[builder 3/6] COPY . .

[builder 3/6] COPY . .  ✔ 53ms

[builder 4/6] RUN echo "Building frontend..." && npx vite build

Building frontend...

vite v5.4.19 building for production...

transforming...

Browserslist: browsers data (caniuse-lite) is 8 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme

✓ 2415 modules transformed.

rendering chunks...

computing gzip size...

../dist/public/index.html                   1.13 kB │ gzip:   0.59 kB
../dist/public/assets/index-BrovwWK3.css  127.76 kB │ gzip:  19.53 kB

../dist/public/assets/index-Ch4FA7fH.js   746.69 kB │ gzip: 218.60 kB


(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.

✓ built in 5.30s

npm notice
npm notice New major version of npm available! 10.8.2 -> 11.4.2
npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
npm notice To update run: npm install -g npm@11.4.2
npm notice

[builder 4/6] RUN echo "Building frontend..." && npx vite build  ✔ 6s

[builder 5/6] RUN echo "Building backend..." && npx esbuild server/production.ts --platform=node --packages=external --bundle --format=esm --outdir=dist --external:vite --external:./vite.ts

Building backend...


  dist/production.js  280.5kb

⚡ Done in 12ms

[builder 5/6] RUN echo "Building backend..." && npx esbuild server/production.ts --platform=node --packages=external --bundle --format=esm --outdir=dist --external:vite --external:./vite.ts  ✔ 508ms

[builder 6/6] RUN echo "Creating entry point..." && echo 'import("./production.js");' > dist/index.js

Creating entry point...

[builder 6/6] RUN echo "Creating entry point..." && echo 'import("./production.js");' > dist/index.js  ✔ 111ms

[runner 2/6] RUN addgroup --system --gid 1001 nodejs  ✔ 0ms – CACHED

[runner 3/6] RUN adduser --system --uid 1001 recrutas  ✔ 0ms – CACHED

[runner 4/6] COPY --from=builder /app/dist ./dist  ✔ 0ms – CACHED

[runner 5/6] COPY --from=builder /app/node_modules ./node_modules  ✔ 0ms – CACHED
